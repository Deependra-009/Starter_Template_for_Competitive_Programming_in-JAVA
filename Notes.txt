// ------>>
If you want to find a number at a particular position of a sequence which not including that number which included d digit
eg: d=4;
1 2 3 5 6 7 8 9 10 11 12 13 15 .... 
at position 22 comes 25th number 

Link-> https://codeforces.com/contest/1811/problem/E


// -------------->
If you want to divide an array into segment which contains contiguous element and all sum of of all element in segments is equal

Link -> https://codeforces.com/problemset/problem/1741/C

//------------------->
Note: Total number of ways to distribute five different balls among 3 persons are 35
Number of ways to distribute five balls to 3 people at least one get no ball are 3C1×(25−1)
 ways.
Then total number of ways to distribute balls such that each person get at least one ball is
35−3C1×(25−1)=243−3∗31

//------------------->
If you want to add from 1 to N multiple times just assume that is a number line then you want to take presum of number line count
eg:- 
=>1 2 3 4 5 6 7
->0 1 1 1 0 0 0
->1 1 0 0 0 0 0
->1 0 0 0 0 0 0
---------------
->3 2 1 1 0 0 0
->3 5 6 7 7 7 7

TreeMap<Integer,Integer> map=new TreeMap<>();
        
for(int i[]:l) {
    map.put(i[0],map.getOrDefault(i[0],0)+1);
    map.put((i[1]+1),map.getOrDefault(i[1]+1,0)-1);
}
int ans=0;
int sum=0;
for(Map.Entry<Integer,Integer> entry:map.entrySet()){
    int value=entry.getValue();
    sum+=value;
    ans=Math.max(ans,sum);
}

=> ans

//------------------->
If you want to find n number between l to r and those numbers of gcd(i,a[i]) is unique. So, it is possible when you find the multiple of i between from l to r.
for(int i=1;i<=n;i++) {
long mul=((l-1)/i+1)*i;
print(mul); // print number
if(mul>r) check=false; // if rhe number is greate so print false
}

//-------------------->
If you want to fnd x and y y comes after x so print yes otherwise print no. Dublicates values allowed
Link -> https://codeforces.com/problemset/problem/1702/C

        


